<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <!-- <link rel="stylesheet" type="text/css" href="styles.css"> -->
        <script
        async
        src="https://unpkg.com/es-module-shims@1.3.6/dist/es-module-shims.js"
    ></script>

    <script type="importmap">
        {
            "imports": {
                "three": "./build/three.module.js"
            }
        }
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Fredoka:wght@300&family=Miriam+Libre&family=Nanum+Gothic+Coding&display=swap" rel="stylesheet">
    <style>
               #form {
        background-color: red;
        position: absolute; 
        overflow-y: auto;
        background: #0000; padding: 0.25rem; position: absolute; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box;
        width: 35%;
        margin-bottom: 30%;
      }
      #input { 
        color:  white;
        background: rgba(0, 0, 0, 0.15);
        max-height: 75vh;
        overflow-y: auto;
        border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button {
        border-radius: 30px;
        max-height: 85vh;
        overflow-y: auto; 
        background: lightblue; border: none; padding: 0 1rem; margin: 0.25rem; outline: none; color: black; border:solid 3px black;font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif; font-weight: 500; }

      #messages { 
        max-width: 100%;
    position: absolute;
    max-height: 40vh;
    overflow-y: auto;list-style-type: none; margin: 0; padding: 0; 
overflow-x:hidden ;
}

      #messages > li { padding: 0.5rem 1rem; }
      #messages > li { background: #0000;font-size: 1.5em; color: white;}
        #messages > li { width: 100%;
      
      }
        html{
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            padding: 0;
            overflow: hidden;
            font-family: 'Nanum Gothic Coding', monospace;
        }
        .popUps
        {
            z-index: 1;
            position: absolute;
            width: 80%;
            height: 80%;
            top: 10%;
            bottom: 10%;
            right: 10%;
            left: 10%;
            text-align: center;
            display: none;
            width: 100px;
            height: 10px;
            background-color: rgba(0, 123, 255, 0.562);
            animation-name: example, example2;
            animation-duration: 2000ms, 1000ms;
            animation-delay: 0ms, 2000ms;
            animation-timing-function: ease-in, ease-out;
            animation-iteration-count: 1, 1;
            animation-fill-mode: forwards;
        }
        #class1popUp1
        {
            color: lightblue;
            align-content: center;
        }
        @keyframes example {
            from {width: 10%;}
            to {width: 80%; }
        }
        @keyframes example2 {
            from {height: 5%;}
            to {height: 80%;}
        }
        #getOut
        {
            color: lightblue;
            background-color: black;
            padding-left: 2vw;
            text-align: left;
        }
        #content
        {
            font-size: 2.5em;
            margin-top: 18%;
            animation-name: textAppearance;
            animation-duration: 2000ms;
            animation-delay: 4s;
            animation-timing-function: ease-in;
            animation-iteration-count: 1;
            animation-fill-mode: forwards; 
            visibility: hidden;
        }
        @keyframes textAppearance {
            0% {visibility: hidden; color: rgba(0, 0, 0, 0);}

            100% {visibility: visible; color: lightblue;}
        }
        #firstYear
        {
            display: none;
        }
        #secondYear
        {
            display: none;
        }
        #popUpIns
        {
            position: absolute;
            top: 20px;
            color: lightblue;
            display: none;
            left: 40%;
        }
        #teleporter
        {
            position: absolute;
            top: 50%;
            color: lightblue;
            display: none;
            left: 30%;
        }
        #cafiteriaPopUp
        {
            position: absolute;
        }
        #teleporterOut
        {
            display: none;
            position: absolute;
        }
        #teleporterIn
        {
            text-align: center;
            width: 100%;
            background-color: lightblue;
            display: none;
            position: absolute;
        }
    </style>
    </head>
    <body>
        <div id="class1popUp1" class="popUps">
            <p id="content">
                press the 'a' key to learn with the first year's platform
                <br>
                press the 'd' key to learn with the second year's platform
                <br>
                press the space key to continue travelling in the room
            </p>
        </div>
        <div id="getOut" class="popUps">
            <p id="content">
                to go learn with the course platforms, click the "1" key.
                <br>
                to go practice JS and CSS with games, click the "2" key.
                <br>
                to go learn CSS in a game and an article, click the "3" key.
            </p>
        </div>
        <iframe id="firstYear" class="popUps" src="https://course-ide-staging.s3.eu-central-1.amazonaws.com/index.html" frameborder="0"></iframe>
        <iframe id="secondYear" class="popUps" src="https://yoni-ai.github.io/advanced_js_course_shared/" frameborder="0"></iframe>
        <p id="popUpIns">press the space key to return to main menu</p>
        <p id="teleporter">are you sure you want to exit this class? press 'esc' to stay and 'enter' to exit</p>
        <div id="teleporterOut" class="popUps">
            <p id="content">
                press the 'w' key to walk forward
                <br>
                press the 'd' key to walk backwards
                <br>
                press the space key to flip the camera
                <br>
                press the arrows keys to look around
                <br>
                press 'esc' to close this menu
            </p>
        </div> 
        <ul id="messages"></ul>
        <form id="form" action="">
          <input id="input" autocomplete="off" /><button>Send</button>
        </form>
          
        <p id="teleporterIn"><b>please walk to the end of the teleporter</b></p>
        <iframe id="secondYear" class="popUps" src="https://yoni-ai.github.io/advanced_js_course_shared/" frameborder="0"></iframe>
        <script type="module" src="skybox.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <script>
        let socket = io();
      let messages = document.getElementById('messages');
      let form = document.getElementById('form');
      let input = document.getElementById('input');

      form.addEventListener('submit', function(e) {
        e.preventDefault();
        if(input.value) {

          input.value = input.value.replace('fuck','bless')
          input.value = input.value.replace('shut up','talk')
          input.value = input.value.replace('shit','oyyy')
          input.value = input.value.replace('asshole','prettyFace')
          input.value = input.value.replace('motherfucker','good boy')
          socket.emit('chat message', input.value);
          input.value = '';
        }
      });
    
      socket.on('chat message', function(msg) { 
        var item = document.createElement('li');
        item.textContent = msg;
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });
      socket.on('output-messages', function(msg) { 
        console.log(msg);
        if (msg.length){
          msg.forEach(message=>{
            var item = document.createElement('li');
        item.textContent =message.msg;
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
          })

//         function outputMessage(message) {
//   const div = document.createElement('div');
//   div.classList.add('message');
//   const p = document.createElement('p');
//   p.classList.add('meta');
//   p.innerText = message.username;
//   p.innerHTML += `<span>${message.time}</span>`;
//   div.appendChild(p);
//   const para = document.createElement('p');
//   para.classList.add('text');
//   para.innerText = message.text;
//   div.appendChild(para);
//   document.querySelector('.chat-messages').appendChild(div);
// }

        }
      });
    </script>
    </body>
</html>
